# Optional - The name of the workflow as it will appear in the "Actions" tab of the GitHub repository. 
# If this field is omitted, the name of the workflow file will be used instead.
name: backend-workflow

# Specifies the trigger for this workflow. This example uses the push event, so a workflow run is triggered every time someone pushes a change to the repository or merges a pull request. 
# This is triggered by a push to the main and the github-actions-backend branches;
on:
    push:
        branches:
            - docker-implementation
            - github-actions-backend
            - main
env:
    DOCKER_IMAGE_TAG: ${{ github.ref == 'refs/heads/main' || 'refs/heads/docker-implementation' }}
    GITHUB_REGISTRY: ghcr.io
    GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
    # Defines a job named test1. The child keys will define properties of the job.  
    test:
        # Configures the job to run on the latest version of an Ubuntu Linux runner. 
        # This means that the job will execute on a fresh virtual machine hosted by GitHub
        runs-on: ubuntu-latest
        
        # Groups together all the steps that run in the test1 job. 
        # Each item nested under this section is a separate action or shell script.
        steps:
            - uses: actions/checkout@v4

            - name: 'Create env file'
            # On copie tous les secrets contenus dans le repo dans un fichier .env
              run: |
                  echo "${{ secrets.ALL_ENV_VARIABLES }}" > .env

            - name: run tests in container
              run: docker compose -f docker-compose.back.test.yml up --build

            - name: "upload env file to use it in the deploy job"
              uses: actions/upload-artifact@v4
              with:
                name: env
                path: .env
                
    security-check:
        
        runs-on: ubuntu-latest
        # Attends que le job test soit termin√© pour commencer
        needs: test

        steps:

            - uses: actions/checkout@master

            - name: Download env file created as an artifact to add it to the container
              uses: actions/download-artifact@v4
              with:
                name: env

            - name: Build the Docker image with docker-compose
              run: |
                    docker-compose -f docker-compose.back.dev.yml build

            - name: Run Snyk to check for vulnerabilities
              uses: snyk/actions/node@master
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
              with:
                command: monitor
            
            - name: Scan the built image for vulnerabilities and ignores issues as they can't be fixed yet
              uses: snyk/actions/docker@master
              continue-on-error: true
              with: 
                image: backend_skin-sight-backend:latest
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

            
    deploy-to-dockerhub:

        runs-on: ubuntu-latest
        needs: security-check

        steps:
            - name: Checkout the repository
              uses: actions/checkout@v4

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
            
            - name: "download env file to add it to the container"
              uses: actions/download-artifact@v4
              with:
                name: env
                
            - name: Push the Docker image to the DockerHub registry
              uses: docker/build-push-action@v3
              with:
                push: true
                tags: |
                  ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}